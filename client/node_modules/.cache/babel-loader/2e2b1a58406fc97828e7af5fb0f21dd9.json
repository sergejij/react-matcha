{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79050\\\\WebstormProjects\\\\react-matcha\\\\client\\\\src\\\\pages\\\\Chats\\\\Chat\\\\ChatMessages\\\\ChatMessages.jsx\";\nimport React from 'react';\nimport { ChatMessagesStyled } from './styled';\nimport Message from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst messages = [{\n  isMyMessage: true,\n  text: 'Привет))'\n}, {\n  isMyMessage: false,\n  text: 'Привет)'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла?'\n}, {\n  isMyMessage: false,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла)'\n}, {\n  isMyMessage: false,\n  text: 'Бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Привет))'\n}, {\n  isMyMessage: false,\n  text: 'Привет)'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла?'\n}, {\n  isMyMessage: false,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла)'\n}, {\n  isMyMessage: false,\n  text: 'Бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Привет))'\n}, {\n  isMyMessage: false,\n  text: 'Привет)'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла?'\n}, {\n  isMyMessage: false,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла)'\n}, {\n  isMyMessage: false,\n  text: 'Бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Привет))'\n}, {\n  isMyMessage: false,\n  text: 'Привет)'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла?'\n}, {\n  isMyMessage: false,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла)'\n}, {\n  isMyMessage: false,\n  text: 'Бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Привет))'\n}, {\n  isMyMessage: false,\n  text: 'Привет)'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла?'\n}, {\n  isMyMessage: false,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла)'\n}, {\n  isMyMessage: false,\n  text: 'Бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Привет))'\n}, {\n  isMyMessage: false,\n  text: 'Привет)'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла?'\n}, {\n  isMyMessage: false,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла)'\n}, {\n  isMyMessage: false,\n  text: 'Бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Привет))'\n}, {\n  isMyMessage: false,\n  text: 'Привет)'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла?'\n}, {\n  isMyMessage: false,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла)'\n}, {\n  isMyMessage: false,\n  text: 'Бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Привет))'\n}, {\n  isMyMessage: false,\n  text: 'Привет)'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла?'\n}, {\n  isMyMessage: false,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла)'\n}, {\n  isMyMessage: false,\n  text: 'Бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Привет))'\n}, {\n  isMyMessage: false,\n  text: 'Привет)'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла?'\n}, {\n  isMyMessage: false,\n  text: 'Бла бла бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла)'\n}, {\n  isMyMessage: false,\n  text: 'Бла'\n}, {\n  isMyMessage: true,\n  text: 'Бла бла бла'\n}];\n\nconst ChatMessages = () => /*#__PURE__*/_jsxDEV(ChatMessagesStyled, {\n  children: messages.map(({\n    isMyMessage,\n    text\n  }, index) => /*#__PURE__*/_jsxDEV(Message, {\n    isMyMessage: isMyMessage,\n    text: text\n  }, `${text}_${index}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 9\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 262,\n  columnNumber: 3\n}, this);\n\n_c = ChatMessages;\nexport default ChatMessages;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMessages\");","map":{"version":3,"sources":["C:/Users/79050/WebstormProjects/react-matcha/client/src/pages/Chats/Chat/ChatMessages/ChatMessages.jsx"],"names":["React","ChatMessagesStyled","Message","messages","isMyMessage","text","ChatMessages","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { ChatMessagesStyled } from './styled';\nimport Message from './Message';\n\nconst messages = [\n  {\n    isMyMessage: true,\n    text: 'Привет))',\n  },\n  {\n    isMyMessage: false,\n    text: 'Привет)',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла?',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла)',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Привет))',\n  },\n  {\n    isMyMessage: false,\n    text: 'Привет)',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла?',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла)',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Привет))',\n  },\n  {\n    isMyMessage: false,\n    text: 'Привет)',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла?',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла)',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Привет))',\n  },\n  {\n    isMyMessage: false,\n    text: 'Привет)',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла?',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла)',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Привет))',\n  },\n  {\n    isMyMessage: false,\n    text: 'Привет)',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла?',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла)',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Привет))',\n  },\n  {\n    isMyMessage: false,\n    text: 'Привет)',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла?',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла)',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Привет))',\n  },\n  {\n    isMyMessage: false,\n    text: 'Привет)',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла?',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла)',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Привет))',\n  },\n  {\n    isMyMessage: false,\n    text: 'Привет)',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла?',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла)',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Привет))',\n  },\n  {\n    isMyMessage: false,\n    text: 'Привет)',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла?',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла бла бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла)',\n  },\n  {\n    isMyMessage: false,\n    text: 'Бла',\n  },\n  {\n    isMyMessage: true,\n    text: 'Бла бла бла',\n  },\n];\n\nconst ChatMessages = () => (\n  <ChatMessagesStyled>\n    {\n      messages.map(({ isMyMessage, text }, index) => (\n        <Message key={`${text}_${index}`} isMyMessage={isMyMessage} text={text} />\n      ))\n    }\n  </ChatMessagesStyled>\n);\n\nexport default ChatMessages;\n"]},"metadata":{},"sourceType":"module"}